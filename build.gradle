buildscript {
	repositories {
		jcenter()
		maven { url = "http://files.minecraftforge.net/maven" }
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
		classpath "gradle.plugin.se.bjurr.gitchangelog:git-changelog-gradle-plugin:1.47"
	}
}

plugins {
	id "com.matthewprenger.cursegradle" version "1.0.9"
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'idea'
apply plugin: "java"
apply plugin: "se.bjurr.gitchangelog.git-changelog-gradle-plugin"

version = version_major + '.' + version_minor + '.' + version_patch + '.' + getBuildNumber()
if (project.hasProperty('buildQualifier')) {
	version = project.version + '-' + project.buildQualifier
}
group= "modularmachines" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "modularmachines_" + mcversion

// java version
sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
	version = mcversion + "-" + forgeversion
	runDir = "run"
	mappings = mcp_mappings

	replace '@VERSION@', project.version
	replace '@BUILD_NUMBER@', getBuildNumber()
}

jar {
    manifest {
        attributes 'FMLAT': 'modularmachines_at.cfg'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allJava
	classifier = 'sources'
}

task apiJar(type: Jar) {
	from sourceSets.main.allSource
	from sourceSets.main.output
	include 'modularmachines/api/**'
	classifier = 'api'
}

// Javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

artifacts {
	archives deobfJar
	archives sourcesJar
	archives apiJar
	archives javadocJar
}

repositories {
	maven {
		name = "foretsry"
		url = "http://maven.ic2.player.to/"
	}
	maven {
		url = 'http://maven.mcmoddev.com'
	}
	maven {
		url "http://dvs1.progwml6.com/files/maven"
	}
	maven {
		name 'tterrag maven'
		url "http://maven.tterrag.com/"
	}
	maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
	 maven {
		name = "blamejared Maven"	 
		url 'https://maven.blamejared.com'
	 }
}

dependencies {
	//Tesla
	deobfCompile "net.darkhax.tesla:Tesla-${tesla_mcversion}:${tesla_version}"
	//JEI
    deobfCompile "mezz.jei:jei_${jei_mcversion}:${jei_version}:api"
    runtime "mezz.jei:jei_${jei_mcversion}:${jei_version}"
	//Forestry
	deobfCompile "net.sengir.forestry:forestry_${mcversion}:${forestry_version}"
	//The One Probe
	deobfCompile "mcjty.theoneprobe:TheOneProbe-${top_mcversion}:${top_version}"
	//Redstone Flux 
	compile "cofh:RedstoneFlux:${rf_version}:deobf"
	//Patchouli
	compile "vazkii.patchouli:Patchouli:${patchouli_version}"
}

processResources {

	// this will ensure that this task is redone when the versions change.
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// replace version and mcversion
		expand 'version':project.version, 'mcversion':project.minecraft.version
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
		exclude '**/*.md'
	}
	
	// Move access transformers to META-INF
	rename '(.+_at.cfg)', 'META-INF/$1'
}

def getBuildNumber() {
	return "$System.env.APPVEYOR_BUILD_NUMBER" != "null" ? "$System.env.APPVEYOR_BUILD_NUMBER" : "0"
}

task makeChangelog(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
	filePath = "changelog.html"
	untaggedName = "Current release ${project.version}"
	fromCommit = "9f052babd63ea949ddaa21fc27461463e6981607"
	toRef =  "HEAD"
	templateContent = file('changelog.mustache').getText('UTF-8')
}

def curseRelations = {
    optionalLibrary 'just-enough-items-jei'
    optionalLibrary 'the-one-probe'
    optionalLibrary 'guide-api'
}

curseforge {
	apiKey = "$System.env.CURSEAPIKEY" != "null" ? "$System.env.CURSEAPIKEY" : "0"
	project {
		id = '233073'
		changelog = file('changelog.html')
		changelogType = 'html'
		releaseType = 'alpha'
		
		relations curseRelations
		
		addArtifact javadocJar
		addArtifact sourcesJar
		addArtifact apiJar
		addArtifact deobfJar
	}
}

afterEvaluate {
	tasks.curseforge233073.dependsOn.add(makeChangelog)
}
